#!/bin/bash

declare -A outputs

outputs[eDP1]='--primary'
outputs[HDMI1]='--off'
outputs[HDMI2]='--off'
outputs[DP1]='--off'
outputs[DP2]='--off'

DIRECTION='right'
DRYRUN=''
DUPLICATE=''

for arg in "$@"; do
	case $arg in
		-c|--copy )
			DUPLICATE='yes'
			;;
		-d|--dryrun|--dry-run )
			DRYRUN='yes'
			;;
		-l|--left )
			DIRECTION='left'
			;;
		-r|--right )
			DIRECTION='right'
			;;
		* )
			echo "Unknown argument: $arg"
			exit 1
			;;
	esac
done

external=$(xrandr -q | grep -P '^(HDMI|DP)\d connected' | awk '{ print $1 }')
num_ext=$(echo $external | wc -l)

if [ $num_ext -eq 1 ]; then
	if [ "$DUPLICATE" = 'yes' ]; then
		outputs[$external]="--same-as eDP1"
	elif [ "$DIRECTION" = 'right' ]; then
		outputs[$external]="--primary --pos 1920x0"
		# 1440 - 1080 = 360
		outputs[eDP1]="--pos 0x360"
	elif [ "$DIRECTION" = 'left' ]; then
		outputs[$external]="--primary --pos 0x0"
		# 1440 - 1080 = 360
		outputs[eDP1]="--pos 2560x360"
	else
		echo "Unknown DIRECTION value: $DIRECTION"
		exit 1
	fi
elif [ $num_ext -gt 1 ]; then
	# convert the $external string into an array
	IFS=' ' read -r -a external <<< "$external"

	if [ $num_ext -eq 2 ]; then
		outputs[eDP1]="--off"
		outputs[${external[0]}]="--auto"

		if [ "$DUPLICATE" = 'yes' ]; then
			outputs[${external[1]}]="--auto --same-as ${external[0]}"
		else
			outputs[${external[1]}]="--auto --${DIRECTION}-of ${external[0]}"
		fi
	else
		echo "Don't know what to do with $num_ext displays!"
		exit 1
	fi
fi

XRANDR_ARGS="
	--output eDP1 --auto ${outputs[eDP1]} \
	--output HDMI1 --auto ${outputs[HDMI1]} \
	--output HDMI2 --auto ${outputs[HDMI2]} \
	--output DP1 --auto ${outputs[DP1]} \
	--output DP2 --auto ${outputs[DP2]} \
"

if [ "$DRYRUN" = 'yes' ]; then
	echo xrandr $XRANDR_ARGS
	xrandr --dryrun $XRANDR_ARGS
else
	xrandr $XRANDR_ARGS
fi
