#!/bin/sh

# don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth

# history size in memory
export HISTSIZE=1000
# history size in history file
export SAVEHIST=10000
export HISTFILESIZE=10000
export HISTFILE=~/.history

# always limit man to 80 characters wide
export MANWIDTH=80

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# ls --color config with dircolors
export LS_COLORS='fi=0:di=1;34:ow=1;34:ln=33:ex=1;32:mi=0;31'

# self-explanatory
export EDITOR=vim

# less options
export LESS='M x4'

# fix journalctl
export SYSTEMD_LESS='KMR +G'
# export SYSTEMD_LESS='FKMRX +G'

# enable colors for grep
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# ag doesn't have config files
alias ag="ag --color-path='0;37' --color-line-number='0;33' --color-match='1;34'"

# some ls aliases
alias ls='ls --time-style=long-iso --group-directories-first --color=auto -Fh'
alias l='ls -l'
alias la='l -A'
alias lt='l -tr'
alias l1='ls -1'

# file and dir stuff
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias rm='rm -I --preserve-root'
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# make a directory and cd into it
function md {
	mkdir -p "$@" && cd $_;
}

# i3 shortcuts
alias i3exec='i3-msg exec'
alias i3lock='i3lock -c 000000'
alias i3rename='i3-msg rename workspace to'
alias i3mv='i3-msg move workspace to output'

# apache
alias a2r='sudo service apache2 reload'
alias a2rs='sudo service apache2 restart'
alias a2cs='\ls /etc/apache2/sites-enabled/'
alias a2em='sudo a2enmod'
alias a2dm='sudo a2dismod'
alias a2cfg='cd /etc/apache2 && ls'
alias a2log='cd /var/log/apache2 && ls -l'

# misc
alias apt-everything='sudo apt-get update && sudo apt-get dist-upgrade && \
	sudo apt-get autoremove && sudo apt-get clean && sudo apt-get autoclean'
alias cal='ncal -Mb3'
alias crlffix='for file in `find . -type f`; do dos2unix $file; done'
alias gdiff='git diff --no-index'
alias most-common='sort | uniq -c | sort -nr | head'
alias pwgen-strong='pwgen -Bs'
alias pwgen-weak='pwgen -ABn'
alias tree='tree --dirsfirst'

# by default, most WMs opening a new terminal will make it start in ~ instead of
# the current terminal's PWD. this alias lets you open a new terminal in the PWD
function t {
	local args="";
	if [ "$*" != "" ]; then
		args="-e $@"
	fi

	args="-cd $PWD $args"

	if command -v i3-msg >/dev/null 2>&1; then
		# opening through i3 exec prevents weird/inconsistent ps trees
		i3-msg "exec x-terminal-emulator $args" &> /dev/null
	else
		# fork in a subshell to make the commands indepentent, and to suppress
		# all output
		( x-terminal-emulator $args & )
	fi
}

# set a terminal's title
function termname {
	echo -ne "\033]0;$1\007"
}

# note taking
_NOTES_DIR=~/Dropbox/notes
function n {
	if [ ! "$1" ]; then
		echo "Missing argument - usage: n <name>"
		return
	fi
	local count=$(nls $1 | wc -l)
	if [ $count -gt 1 ]; then
		nls $1
		return
	elif [ $count -eq 0 ]; then
		$EDITOR "${_NOTES_DIR}/$1.md"
	else
		$EDITOR "${_NOTES_DIR}/$(nls $1)"
	fi
}
function nls {
	pushd ${_NOTES_DIR} > /dev/null
	if [ ! "$@" ]; then
		ls *.md
	else
		ls -1 *.md | grep $@
	fi
	popd > /dev/null
}
function ns {
	if command -v ag >/dev/null 2>&1; then
		ag "$@" ${_NOTES_DIR}
	else
		grep -r "$@" ${_NOTES_DIR}
	fi
}

# improved ps | grep alias
function psgrep {
	ps auxf | grep "$@" | grep -v grep;
}

# set the keyboard map
function kb {
	setxkbmap -v -option compose:ralt -option caps:super $1 \
		&& xset r rate 175 35
}

# livestreamer
function s {
	livestreamer $1 ${2-high,720p,best}
}

# composer create-project
function ccp {
	composer create-project "$1" -s dev --prefer-dist "${*:2}";
}

# find and activate a virtualenv
function avenv {
	if [ -f $PWD/.virtualenv/bin/activate ]; then
		source $PWD/.virtualenv/bin/activate
	elif [ -f $PWD/bin/activate ]; then
		source $PWD/bin/activate
	else
		echo "Couldn't find a virtualenv in cwd!"
	fi
}

# find and remove pycache files
function clear-pycache {
	find . -type f -name '*.pyc' -print0 | xargs -0 rm
	find . -type d -name '__pycache__' -print0 | xargs -0 rm -rf
}

# fetch a github pull request
function gh-fetch-pr {
	git fetch upstream "pull/$1/head:pr-$1"
}
