#!/usr/bin/env bash

# if not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# get rid of those god damn bash builtin aliases
unalias -a

# environment variables, aliases and functions
if [ -d "$HOME/.shrc.d" ]; then
    for f in $HOME/.shrc.d/*.sh; do
        # shellcheck source=/dev/null
        . "$f"
    done
fi

# append to the history file, don't overwrite it
shopt -s histappend

# save multi-line commands as one command
shopt -s cmdhist

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi

    if [ -f /usr/local/etc/bash_completion ]; then
        . /usr/local/etc/bash_completion
    fi
fi

# perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# correct spelling errors during tab-completion
shopt -s dirspell

# fzf bash configuration
if [ -e '/usr/share/fzf' ]; then
    source '/usr/share/fzf/completion.bash'
    source '/usr/share/fzf/key-bindings.bash'
elif [ -e "$HOME/code/dotfiles/vendor/fzf" ]; then
    source "$HOME/code/dotfiles/vendor/fzf/shell/completion.bash"
    source "$HOME/code/dotfiles/vendor/fzf/shell/key-bindings.bash"
fi

# https://github.com/anlutro/venv.sh
if [ -e "$HOME/code/dotfiles/vendor/venv.sh" ]; then
    source "$HOME/code/dotfiles/vendor/venv.sh/venv.sh"
fi

#    /$$$$$$$   /$$$$$$    /$$  
#   | $$__  $$ /$$__  $$ /$$$$  
#   | $$  \ $$| $$  \__/|_  $$  
#   | $$$$$$$/|  $$$$$$   | $$  
#   | $$____/  \____  $$  | $$  
#   | $$       /$$  \ $$  | $$  
#   | $$      |  $$$$$$/ /$$$$$$
#   |__/       \______/ |______/

# on some systems this is not sourced automatically
if ! command -v __git_ps1 >/dev/null 2>&1; then
    if [ -e '/usr/share/git/completion/git-prompt.sh' ]; then
        . '/usr/share/git/completion/git-prompt.sh'
    elif [ -e '/usr/local/etc/bash_completion.d/git-prompt.sh' ]; then
        . '/usr/local/etc/bash_completion.d/git-prompt.sh'
    fi
fi
if ! command -v ___git_complete >/dev/null 2>&1; then
    if [ -e '/usr/share/git/completion/git-completion.bash' ]; then
        . '/usr/share/git/completion/git-completion.bash'
    elif [ -e '/usr/local/etc/bash_completion.d/git-completion.bash' ]; then
        . '/usr/local/etc/bash_completion.d/git-completion.bash'
    fi
fi

# wrap in a function to allow local variables
_set_ps1() {
    export PROMPT_DIRTRIM=5
    local user_color='01;32m' # green
    local host_color='01;32m' # green

    if [ $USER = 'vagrant' ]; then
        user_color='01;34m' # blue
    elif [ $USER = 'root' ]; then
        user_color='01;31m' # red
    elif [ $USER != 'andreas' ]; then
        user_color='01;33m' # yellow
    fi

    if [ -n "$SSH_CLIENT" ]; then
        host_color='01;33m' # yellow
    fi

    PS1='\[\033['
    PS1+='$(test -z "$HISTFILE" && echo "02;37m\u@\h" || echo "'$user_color'\]\u\[\033[0;37m\]@\[\033['$host_color'\]\h")'
    PS1+='\[\033[00m\] \w'

    if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
        debian_chroot=$(cat /etc/debian_chroot)
    fi
    if [ ! -z "$debian_chroot" ]; then
        PS1="${debian_chroot:+($debian_chroot)} $PS1"
    fi

    if [ -n "$VIRTUAL_ENV" ]; then
        if [ -z "$VIRTUAL_ENV_NAME" ]; then
            VIRTUAL_ENV_NAME=$(basename "$VIRTUAL_ENV")
        fi
        if [ "$VIRTUAL_ENV_NAME" = '.venv' ]; then
            VIRTUAL_ENV_NAME=$(basename "$(basename "$VIRTUAL_ENV")")
        fi
        PS1+="  \[\033[0;34m\]$VIRTUAL_ENV_NAME\[\033[00m\]"
    fi

    if command -v __git_ps1 >/dev/null 2>&1; then
        # shellcheck disable=SC2034
        GIT_PS1_SHOWUPSTREAM="auto"
        # GIT_PS1_SHOWDIRTYSTATE=true
        # GIT_PS1_SHOWUNTRACKEDFILES=true
        # GIT_PS1_SHOWCOLORHINTS=true
        PS1+='$(__git_ps1 "  \[\033[01;37m\]%s\[\033[00m\]")'
    fi

    PS1+='\n\[\033[0;37m\]\$\[\033[00m\] '
}

_set_ps1
