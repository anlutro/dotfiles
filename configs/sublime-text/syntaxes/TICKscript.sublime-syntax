%YAML 1.2
---
name: TICKscript
file_extensions: [tick]
scope: source.tick

contexts:
  main:
    - match: '(\.)([A-Za-z_]+)\('
      captures:
        1: keyword.property.tick
        2: meta.function-call.object.tick

    - match: '(\|)([A-Za-z_]+)\('
      captures:
        1: keyword.operator.chain.tick
        2: meta.function-call.object.tick

    - match: '(\@)([A-Za-z_]+)\('
      captures:
        1: keyword.operator.udf.tick
        2: meta.function-call.object.tick

    - match: '\b(\d+(\.\d+)?)\b'
      scope: constant.numeric.tick

    - match: '\b(\d+)(s|m|h|d)\b'
      scope: constant.numeric.tick

    - match: '\b(stream|batch|influxql)\b'
      scope: constant.language.tick

    - match: '\b(TRUE|FALSE)\b'
      scope: constant.boolean.tick

    - match: '\b(AND|OR)\b'
      scope: keyword.operator.logical.tick

    - match: '\b(lambda)(\:)'
      captures:
        1: meta.function.inline.tick storage.function.inline.tick
        2: punctuation.separator.tick

    - match: '\b(var)\b'
      scope: keyword.control.tick

    - match: "'"
      push: string

    - match: '"'
      push: column

    - match: '/'
      scope: keyword.operator.division.tick
    - match: '\*'
      scope: keyword.operator.multiplication.tick
    - match: '-'
      scope: keyword.operator.subtraction.tick
    - match: '\+'
      scope: keyword.operator.addition.tick

    - match: '=='
      scope: keyword.comparator.equals.tick
    - match: '!='
      scope: keyword.comparator.not-equals.tick
    - match: '>'
      scope: keyword.comparator.gt.tick
    - match: '>='
      scope: keyword.comparator.gte.tick
    - match: '<'
      scope: keyword.comparator.lt.tick
    - match: '<='
      scope: keyword.comparator.lte.tick

  column:
    - meta_scope: meta.function.parameters.tick variable.parameter.function.tick
    - match: '"'
      pop: true

  string:
    - meta_scope: string.quoted.tick
    - match: '\{\{'
      scope: entity.other.tick
      push: template
    - match: "'"
      pop: true

  template:
    - match: '"'
      push: column
    - match: '\b(index)\b'
      scope: constant.language.tick
    - match: '\.[A-z_]+'
      scope: variable.tick
    - match: '\}\}'
      scope: entity.other.tick
      pop: true
